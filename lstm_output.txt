==================================================
准备数据...
源语言词汇表大小: 22
目标语言词汇表大小: 22

==================================================
初始化模型...

==================================================
开始训练...
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
Epoch [10/50], Loss: 1.8045
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
Epoch [20/50], Loss: 0.4512
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
Epoch [30/50], Loss: 0.1405
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
Epoch [40/50], Loss: 0.0623
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输入序列形状: torch.Size([2, 5])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([2, 4])
上下文向量形状: torch.Size([2, 128])
编码器隐状态形状: torch.Size([1, 2, 128])
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
Epoch [50/50], Loss: 0.0391

==================================================
测试模型...

输入: 我 爱 自然 语言 处理
输入序列形状: torch.Size([1, 5])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输出: I love natural language processing
上下文向量维度: torch.Size([1, 128])
上下文向量值: [ 0.07231211 -0.7034604   0.9174018   0.65546274 -0.6101252 ]...

输入: 今天 天气 很 好
输入序列形状: torch.Size([1, 4])
上下文向量形状: torch.Size([1, 128])
编码器隐状态形状: torch.Size([1, 1, 128])
输出: Today weather is good
上下文向量维度: torch.Size([1, 128])
上下文向量值: [ 0.25230467 -0.4399158  -0.45620927  0.9405858   0.51511955]...
